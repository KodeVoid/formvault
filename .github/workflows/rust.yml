name: FormVault

on:
  push:
    branches: [ "master" ]       # build & test on master
    tags:
      - 'v*'                     # release only on tags like v0.1.0
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  build:
    if: github.event_name != 'push' || startsWith(github.ref, 'refs/heads/master')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Cache all Rust artifacts (dependencies + target + cargo-release)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('backend/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose

      - name: Fmt
        run: cargo fmt --all -- --check

      - name: Run tests
        run: cargo test --verbose

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-target
          path: backend/target

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Restore build artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-target
          path: backend/target

      - name: Restore cache (dependencies + target + cargo-release)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            backend/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('backend/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-release if missing
        run: |
          if ! command -v cargo-release >/dev/null; then
            cargo install --locked cargo-release
          fi

      - name: Run cargo release
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo release --execute --no-publish

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish
